{"version":3,"sources":["pages/BecomeActive/BecomeActive.tsx","pages/BecomeActive/index.tsx","pages/Home/index.tsx","pages/Home/Home.tsx","pages/About/index.tsx","pages/About/About.tsx","pages/Inspiration/index.tsx","pages/Inspiration/Inspiration.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/img/beispielbild.png"],"names":["Option","Panel","RangePicker","Meta","BecomeActive","gutter","span","className","labelCol","wrapperCol","labelAlign","Item","label","name","Group","compact","style","width","placeholder","defaultValue","value","bordered","key","header","rules","type","cover","alt","src","beispielbild","title","description","Home","About","Inspiration","Header","Footer","Content","App","React","useState","selectedKeys","setSelectedKeys","to","onClick","TeamOutlined","marginRight","mode","onSelect","exact","path","component","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7325e208.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Form, Input, Select, Collapse, DatePicker, Card } from 'antd'\nimport beispielbild from '../../assets/img/beispielbild.png'\nimport './BecomeActive.less'\n\nconst { Option } = Select\nconst { Panel } = Collapse\nconst { RangePicker } = DatePicker\nconst { Meta } = Card\n\nconst BecomeActive = () => (\n  <Row gutter={24}>\n    <Col span={6}>\n      <Card className='filters-pane'>\n        <Form labelCol={{ span: 7 }} wrapperCol={{ span: 17 }} labelAlign='left'>\n          <Form.Item label='Umkreis' name='plz'>\n            <Input.Group compact>\n              <Input style={{ width: '40%' }} placeholder='PLZ' />\n              <Select defaultValue='25km' style={{ width: '46%' }}>\n                <Option value='25km'>25 km</Option>\n                <Option value='50km'>50 km</Option>\n                <Option value='75km'>75 km</Option>\n                <Option value='100km'>100 km</Option>\n                <Option value='unlimited'>Unbegrenzt</Option>\n              </Select>\n            </Input.Group>\n          </Form.Item>\n          <Collapse className='more-filters-collapse' bordered={false}>\n            <Panel key='more' header='Weitere Filter'>\n              <Form.Item label='Projektdauer' name='dauer' rules={[{ type: 'array' }]}>\n                <RangePicker />\n              </Form.Item>\n            </Panel>\n          </Collapse>\n        </Form>\n      </Card>\n    </Col>\n    <Col className='main-area' span={18}>\n      <Card className='tip-of-the-day'>\n        Zusammenhalt, das gilt bei uns nicht nur in Krisenzeiten - <br />\n        Das gilt jetz, morgen und über alle Grenzen hinweg\n      </Card>\n      <div className='results-container'>\n        <Row gutter={[48, 32]}>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[48, 32]}>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title={<span className='meta-title'>NACHBARSCHAFTSHILFE</span>}\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  </Row>\n)\n\nexport default BecomeActive\n","import BecomeActive from './BecomeActive'\nexport default BecomeActive\n","import Home from './Home'\nexport default Home\n","import React from 'react'\nimport { Card } from 'antd'\nimport './Home.less'\n\n\nconst Home = () => (\n  <Card title='Wir für Uns' />\n)\n\nexport default Home\n","import About from './About'\nexport default About\n","import React from 'react'\nimport { Card } from 'antd'\nimport './About.less'\n\n\nconst About = () => (\n  <Card title='Über Uns' />\n)\n\nexport default About\n","import Inspiration from './Inspiration'\nexport default Inspiration\n","import React from 'react'\nimport { Card } from 'antd'\nimport './Inspiration.less'\n\n\nconst Inspiration = () => (\n  <Card title='Inspiration' />\n)\n\nexport default Inspiration\n","import { TeamOutlined } from '@ant-design/icons'\nimport { Layout, Menu } from 'antd'\nimport React from 'react'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\nimport './App.less'\nimport BecomeActive from './pages/BecomeActive'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Inspiration from './pages/Inspiration'\n\nconst { Header, Footer, Content } = Layout\n\nconst App = () => {\n  const [selectedKeys, setSelectedKeys] = React.useState<string[]>([])\n\n  return (\n    <Router>\n      <Layout className='App-wrapper'>\n        <Header className='App-header'>\n          <div className='App-logo'>\n            <Link to='/' onClick={() => setSelectedKeys([])}>\n              <TeamOutlined style={{ marginRight: '12px' }} />\n            Wir für Uns\n          </Link>\n          </div>\n          <Menu\n            className='App-header-menu'\n            mode='horizontal'\n            selectedKeys={selectedKeys}\n            onSelect={({ key }) => { setSelectedKeys([key]) }}\n          >\n            <Menu.Item key='aktiv_werden'><span>Aktiv Werden</span><Link to='/aktiv_werden' /></Menu.Item>\n            <Menu.Item key='inspiration'><span>Inspiration</span><Link to='/inspiration' /></Menu.Item>\n            <Menu.Item key='uber_uns'><span>Über Uns</span><Link to='/uber_uns' /></Menu.Item>\n          </Menu>\n        </Header>\n        <Content className='App-content-wrapper'>\n          <div className='App-content'>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/aktiv_werden' component={BecomeActive} />\n            <Route exact path='/inspiration' component={Inspiration} />\n            <Route exact path='/uber_uns' component={About} />\n          </div>\n        </Content>\n        <Footer className='App-footer'>Wir für Uns © {new Date().getFullYear()}</Footer>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/beispielbild.f894d62b.png\";"],"sourceRoot":""}