{"version":3,"sources":["pages/Home/Home.tsx","pages/Home/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/img/beispielbild.png"],"names":["Option","Panel","RangePicker","Meta","Home","gutter","span","style","backgroundColor","labelCol","wrapperCol","labelAlign","Item","label","name","Group","compact","width","placeholder","defaultValue","value","className","bordered","key","header","rules","type","background","padding","paddingTop","cover","alt","src","beispielbild","title","description","Header","Footer","Content","App","href","TeamOutlined","marginRight","theme","mode","defaultSelectedKeys","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.2e240427.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Form, Input, Select, Collapse, DatePicker, Card } from 'antd'\nimport beispielbild from '../../assets/img/beispielbild.png'\nimport './Home.less'\n\nconst { Option } = Select\nconst { Panel } = Collapse\nconst { RangePicker } = DatePicker\nconst { Meta } = Card\n\nconst Home = () => (\n  <Row gutter={24}>\n    <Col span={6}>\n      <Card style={{ backgroundColor: '#bbb' }}>\n        <Form labelCol={{ span: 7 }} wrapperCol={{ span: 17 }} labelAlign='left'>\n          <Form.Item label='Umkreis' name='plz'>\n            <Input.Group compact>\n              <Input style={{ width: '40%' }} placeholder='PLZ' />\n              <Select defaultValue='25km' style={{ width: '46%' }}>\n                <Option value='25km'>25 km</Option>\n                <Option value='50km'>50 km</Option>\n                <Option value='75km'>75 km</Option>\n                <Option value='100km'>100 km</Option>\n                <Option value='unlimited'>Unbegrenzt</Option>\n              </Select>\n            </Input.Group>\n          </Form.Item>\n          <Collapse className='more-filters-collapse' bordered={false}>\n            <Panel key='more' header='Weitere Filter'>\n              <Form.Item label='Projektdauer' name='dauer' rules={[{ type: 'array' }]}>\n                <RangePicker />\n              </Form.Item>\n            </Panel>\n          </Collapse>\n        </Form>\n      </Card>\n    </Col>\n    <Col span={18} style={{ background: '#ddd', padding: '24px' }}>\n      <Card>\n        Tip of the Day / Motivation\n      </Card>\n      <div style={{ paddingTop: '24px' }}>\n        <Row gutter={[48, 32]}>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[48, 32]}>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card cover={\n              <img\n                alt='beispielbild'\n                src={beispielbild}\n              />\n            }>\n              <Meta\n                title='NACHBARSCHAFTSHILFE'\n                description='Hilf Oma und Opa'\n              />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  </Row>\n)\n\nexport default Home\n","import Home from './Home'\nexport default Home\n","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { TeamOutlined } from '@ant-design/icons'\nimport Home from './pages/Home'\nimport './App.less'\n\nconst { Header, Footer, Content } = Layout\n\nconst App = () => (\n  <Layout>\n    <Header className='App-header'>\n        <div className='App-logo'>\n          <a href='http://loclahost/' title='Wir für Uns'>\n          <TeamOutlined style={{marginRight: '12px'}} />\n          Wir für Uns\n          </a>\n        </div>\n      <Menu\n        theme='dark'\n        className='App-header-menu'\n        mode='horizontal'\n        defaultSelectedKeys={['home']}\n      >\n        <Menu.Item key='home'>Home</Menu.Item>\n        <Menu.Item key='helper'>Wo kann ich Helfen</Menu.Item>\n        <Menu.Item key='about'>Über Uns</Menu.Item>\n      </Menu>\n    </Header>\n    <Content className='App-content-wrapper'>\n      <div className='App-content'>\n        <Home />\n      </div>\n    </Content>\n    <Footer className='App-footer'>Wir für Uns © {new Date().getFullYear()}</Footer>\n  </Layout>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/beispielbild.f894d62b.png\";"],"sourceRoot":""}